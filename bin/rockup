#!/usr/bin/env ruby

require 'rockup'
require 'optparse'

opts = {
	mode: :backup,
	compress: :auto
}

OptionParser.new do |parser|

	parser.banner = 'Usage: rockup [opts] backup-dir {source-dir-1 source-dir-2 ...}'

	parser.on('-h', '--help', 'Print help') do
		puts parser
		exit
	end

	parser.on('-b', 'Perform full or incremental backup (the default mode if no other option is specified)') do
		opts[:mode] = :backup
	end

	parser.on('-B', 'Force full backup') do
		opts[:mode] = :backup
		opts[:full] = true
	end

	parser.on('-r DESTDIR', 'Restore files from backup') do |dir|
		opts[:mode] = :restore
		opts[:restore] = dir
	end

	parser.on('--dry-run', 'Do not modify the filesystem in any way (no files/directories are created or modified)') do
		opts[:dry] = true
	end

	parser.on('--compress', 'Enforce compression of backed data') do
		opts[:compress] = :force
	end

	parser.on('--no-compress', 'Disable compression of backed data') do
		opts[:compress] = :disable
	end

end.parse!

backupdir =  ARGV.shift
srcdirs = ARGV

raise 'Backup directory must be specified' if backupdir.nil?
raise 'At least one source directory must be specified' if srcdirs.empty?

project = Rockup::Project.new(srcdirs, backupdir)

project.dry = opts[:dry]
project.compress = opts[:compress]

case opts[:mode]
when :backup
	project.backup!(!opts[:full])
when :restore
	project.restore!
end