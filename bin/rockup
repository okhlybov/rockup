#!/usr/bin/env ruby
# frozen_string_literal: true


require 'yaml'
require 'rockup'
require 'optparse'


raise 'missing repository URL' if (repository =  ARGV.shift).nil?


project = Rockup::Project.new(repository)


raise 'missing command' if (command = ARGV.shift).nil?


case command
when 'info'
  $stdout << YAML.dump({
      'repository' => project.repository.url,
      'metadata' => project.repository.metadata.sort
  })
when 'metadata'
  raise 'missing subcommand for metadata' if (command = ARGV.shift).nil?
  case command
  when 'info'
    if (tag = ARGV.shift).nil?
      tag = project.repository.metadata.sort.last
      $stderr << "no metadata tag specified; using head tag `#{tag}`"
    end
    $stdout << YAML.dump(project.metadata[tag].to_yaml)
  else
    raise 'unknown metadata command; expected one of: ' + %w(info).join(' ')
  end
when 'backup'
  tag = nil
  mode = :incremental
  OptionParser.new do |parser|
    parser.on('--full', 'perform full backup') {mode = :full}
    parser.on('--incremental', 'perform incremental backup (default)') {mode = :incremental}
    parser.on('--head METADATA', 'metadata head tag') {|t| tag = t}
  end.parse!
  case mode
  when :full
    $stderr << 'ignoring specified metadata head tag' unless tag.nil?
    metadata = project.metadata[]
    raise 'no sources specified' if ARGV.empty?
    ARGV.each {|root| Rockup::Source.new(metadata, root)}
  when :incremental
    if tag.nil?
      $stderr << 'no metadata head tag specified; using latest'
      tag = project.repository.metadata.sort.last
    end
    metadata = project.metadata[tag]
  end
  metadata.sources.each_value {|source| source.update}
  metadata.write
else
  raise 'unknown command; expected one of: ' + %w(info metadata backup).join(' ')
end